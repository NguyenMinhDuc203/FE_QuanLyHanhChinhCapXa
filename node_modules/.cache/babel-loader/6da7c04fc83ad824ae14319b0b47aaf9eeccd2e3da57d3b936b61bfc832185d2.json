{"ast":null,"code":"var _jsxFileName = \"D:\\\\_Web\\\\Reactjs\\\\QuanLyHanhChinhCapHuyen\\\\quanlyhanhchinh\\\\src\\\\pages\\\\RegisterPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Button, Col, Form, Input, Row, Typography, Image } from 'antd';\n// import '../pages/Login.css';\n\n// // import firebase from '../../firebase/config';\n// import { Link, useNavigate } from 'react-router-dom'; // Import useNavigate\n// import Upload from '../assets/img/upload.png';\n// const backgroundStyle = {\n\n//   backgroundSize: 'cover',\n//   backgroundPosition: 'center',\n// };\n\n// const { Title } = Typography;\n\n// const formItemLayout = {\n//   labelCol: {\n//     xs: { span: 24 },\n//     sm: { span: 8 },\n//   },\n//   wrapperCol: {\n//     xs: { span: 24 },\n//     sm: { span: 16 },\n//   },\n// };\n\n// const tailFormItemLayout = {\n//   wrapperCol: {\n//     xs: { span: 24, offset: 0 },\n//     sm: { span: 16, offset: 8 },\n//   },\n// };\n\n// export default function RegisterPage() {\n\n//   return (\n//     <div className='formClass' style={backgroundStyle}>\n//       <Row style={{\n//         boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\n//         borderRadius: '5px',\n//         border: '1px solid #fff',\n//         padding: '10px',\n//         backgroundColor: '#fff',\n//         paddingTop: '50px'\n//       }}>\n//         <Col style={{ marginBottom: 20 }}>\n//           <Row justify='center' >\n\n//             <Col style={{ marginLeft: 10 }}>\n//               <Title>Sign Up</Title>\n//             </Col>\n//           </Row>\n//           <Row>\n//             <Form\n//               {...formItemLayout}\n//               form={form}\n//               name=\"register\"\n//               onFinish={onFinish}\n//               initialValues={{\n//                 residence: ['zhejiang', 'hangzhou', 'xihu'],\n//                 prefix: '86',\n//               }}\n//               style={{\n//                 maxWidth: 600,\n//               }}\n//               scrollToFirstError\n//             >\n//               <Form.Item\n//                 name=\"userName\"\n//                 label=\"User Name\"\n//                 rules={[\n//                   {\n//                     required: true,\n//                     message: 'Please input your user name!',\n//                     whitespace: true,\n//                   },\n//                 ]}\n//               >\n//                 <Input placeholder='User Name' onChange={(e) => setName(e.target.value)} />\n//               </Form.Item>\n//               <Form.Item\n//                 name=\"email\"\n//                 label=\"E-mail\"\n//                 rules={[\n//                   {\n//                     type: 'email',\n//                     message: 'The input is not valid E-mail!',\n//                   },\n//                   {\n//                     required: true,\n//                     message: 'Please input your E-mail!',\n//                   },\n//                 ]}\n//               >\n//                 <Input placeholder='Email' onChange={(e) => setEmail(e.target.value)} />\n//               </Form.Item>\n//               <Form.Item\n//                 name=\"password\"\n//                 label=\"Password\"\n//                 rules={[\n//                   {\n//                     required: true,\n//                     message: 'Please input your password!',\n//                   },\n//                 ]}\n//                 hasFeedback\n//               >\n//                 <Input.Password placeholder='Password' />\n//               </Form.Item>\n//               <Form.Item\n\n//                 name=\"confirm\"\n//                 label=\"Confirm Password\"\n//                 dependencies={['password']}\n//                 hasFeedback\n//                 rules={[\n//                   {\n//                     required: true,\n//                     message: 'Please confirm your password!',\n//                   },\n//                   ({ getFieldValue }) => ({\n//                     validator(_, value) {\n//                       if (!value || getFieldValue('password') === value) {\n//                         return Promise.resolve();\n//                       }\n//                       return Promise.reject(new Error('The new password that you entered do not match!'));\n//                     },\n//                   }),\n//                 ]}\n//               >\n//                 <Input.Password placeholder='Confirm Password' onChange={(e) => setPassword(e.target.value)} />\n//               </Form.Item>\n\n//                  <Form.Item>\n//                 <input type=\"file\" id='file' style={{ display: 'none' }} onChange={handleAvatarChange} />\n//                 <label htmlFor=\"file\" className='label-avt' style={{ cursor: 'pointer' }}>\n//                   <img src={Upload} alt=\"Add your avatar\" width={35} style={{ marginLeft: '50px' }} />\n//                   <span className='span-avt'>{avatar ? avatar.name : 'Add an avatar'}</span>\n//                 </label>\n//               </Form.Item>\n\n//               <Row justify=\"end\" style={{ marginBottom: '16px' }}>\n//                 <Col>\n//                   <Form.Item noStyle>\n//                     Already have an Account <Link to=\"/login\">Login</Link>?\n//                   </Form.Item>\n//                 </Col>\n//               </Row>\n\n//               <Row>\n//                 <Col offset={8}>\n//                   <Form.Item {...tailFormItemLayout} >\n//                     <Button type=\"primary\" htmlType=\"submit\" onClick={submit}>\n//                       Register\n//                     </Button>\n//                   </Form.Item>\n//                 </Col>\n//                 <Col>\n//                 </Col>\n//               </Row>\n//             </Form>\n//           </Row>\n//         </Col>\n//       </Row>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from 'react';\nimport { Button, Col, Form, Input, Row, Typography, Image } from 'antd';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Upload from '../assets/img/upload.png'; // Assuming path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\nconst RegisterPage = () => {\n  _s();\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [avatar, setAvatar] = useState(null);\n\n  // Function to handle file input for avatar\n  const handleAvatarChange = e => {\n    if (e.target.files.length > 0) {\n      setAvatar(e.target.files[0]);\n    }\n  };\n  const onFinish = values => {\n    console.log('Received values of form:', values);\n    // Here you would typically handle registration logic, e.g., sending data to a server\n    // After successful registration, you might want to redirect the user:\n    // navigate('/some-path');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formClass\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      justify: \"center\",\n      style: {\n        maxWidth: '600px',\n        margin: '0 auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          level: 2,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          form: form,\n          name: \"register\",\n          onFinish: onFinish,\n          labelCol: {\n            span: 8\n          },\n          wrapperCol: {\n            span: 16\n          },\n          initialValues: {\n            remember: true\n          },\n          autoComplete: \"off\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"userName\",\n            label: \"User Name\",\n            rules: [{\n              required: true,\n              message: 'Please input your user name!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"User Name\",\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"email\",\n            label: \"E-mail\",\n            rules: [{\n              type: 'email',\n              message: 'The input is not valid E-mail!'\n            }, {\n              required: true,\n              message: 'Please input your E-mail!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Email\",\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"password\",\n            label: \"Password\",\n            rules: [{\n              required: true,\n              message: 'Please input your password!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {\n              placeholder: \"Password\",\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"confirm\",\n            label: \"Confirm Password\",\n            dependencies: ['password'],\n            rules: [{\n              required: true,\n              message: 'Please confirm your password!'\n            }, ({\n              getFieldValue\n            }) => ({\n              validator(_, value) {\n                if (!value || getFieldValue('password') === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(new Error('The passwords do not match!'));\n              }\n            })],\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {\n              placeholder: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"file\",\n              style: {\n                display: 'none'\n              },\n              onChange: handleAvatarChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"file\",\n              style: {\n                cursor: 'pointer'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: Upload,\n                alt: \"Upload avatar\",\n                style: {\n                  verticalAlign: 'middle',\n                  marginRight: '10px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this), avatar ? avatar.name : 'Add an avatar']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            ...tailFormItemLayout,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: [\"Already have an Account? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterPage, \"INVNOwWMJEqescb0Wr/jblGrR1E=\", false, function () {\n  return [Form.useForm, useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","Button","Col","Form","Input","Row","Typography","Image","Link","useNavigate","Upload","jsxDEV","_jsxDEV","Title","tailFormItemLayout","wrapperCol","xs","span","offset","sm","RegisterPage","_s","form","useForm","navigate","name","setName","email","setEmail","password","setPassword","avatar","setAvatar","handleAvatarChange","e","target","files","length","onFinish","values","console","log","className","children","justify","style","maxWidth","margin","level","fileName","_jsxFileName","lineNumber","columnNumber","labelCol","initialValues","remember","autoComplete","width","Item","label","rules","required","message","placeholder","onChange","value","type","Password","dependencies","getFieldValue","validator","_","Promise","resolve","reject","Error","id","display","htmlFor","cursor","src","alt","verticalAlign","marginRight","htmlType","to","_c","$RefreshReg$"],"sources":["D:/_Web/Reactjs/QuanLyHanhChinhCapHuyen/quanlyhanhchinh/src/pages/RegisterPage.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { Button, Col, Form, Input, Row, Typography, Image } from 'antd';\r\n// import '../pages/Login.css';\r\n\r\n// // import firebase from '../../firebase/config';\r\n// import { Link, useNavigate } from 'react-router-dom'; // Import useNavigate\r\n// import Upload from '../assets/img/upload.png';\r\n// const backgroundStyle = {\r\n\r\n//   backgroundSize: 'cover',\r\n//   backgroundPosition: 'center',\r\n// };\r\n\r\n// const { Title } = Typography;\r\n\r\n// const formItemLayout = {\r\n//   labelCol: {\r\n//     xs: { span: 24 },\r\n//     sm: { span: 8 },\r\n//   },\r\n//   wrapperCol: {\r\n//     xs: { span: 24 },\r\n//     sm: { span: 16 },\r\n//   },\r\n// };\r\n\r\n// const tailFormItemLayout = {\r\n//   wrapperCol: {\r\n//     xs: { span: 24, offset: 0 },\r\n//     sm: { span: 16, offset: 8 },\r\n//   },\r\n// };\r\n\r\n// export default function RegisterPage() {\r\n  \r\n\r\n//   return (\r\n//     <div className='formClass' style={backgroundStyle}>\r\n//       <Row style={{\r\n//         boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\r\n//         borderRadius: '5px',\r\n//         border: '1px solid #fff',\r\n//         padding: '10px',\r\n//         backgroundColor: '#fff',\r\n//         paddingTop: '50px'\r\n//       }}>\r\n//         <Col style={{ marginBottom: 20 }}>\r\n//           <Row justify='center' >\r\n            \r\n//             <Col style={{ marginLeft: 10 }}>\r\n//               <Title>Sign Up</Title>\r\n//             </Col>\r\n//           </Row>\r\n//           <Row>\r\n//             <Form\r\n//               {...formItemLayout}\r\n//               form={form}\r\n//               name=\"register\"\r\n//               onFinish={onFinish}\r\n//               initialValues={{\r\n//                 residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n//                 prefix: '86',\r\n//               }}\r\n//               style={{\r\n//                 maxWidth: 600,\r\n//               }}\r\n//               scrollToFirstError\r\n//             >\r\n//               <Form.Item\r\n//                 name=\"userName\"\r\n//                 label=\"User Name\"\r\n//                 rules={[\r\n//                   {\r\n//                     required: true,\r\n//                     message: 'Please input your user name!',\r\n//                     whitespace: true,\r\n//                   },\r\n//                 ]}\r\n//               >\r\n//                 <Input placeholder='User Name' onChange={(e) => setName(e.target.value)} />\r\n//               </Form.Item>\r\n//               <Form.Item\r\n//                 name=\"email\"\r\n//                 label=\"E-mail\"\r\n//                 rules={[\r\n//                   {\r\n//                     type: 'email',\r\n//                     message: 'The input is not valid E-mail!',\r\n//                   },\r\n//                   {\r\n//                     required: true,\r\n//                     message: 'Please input your E-mail!',\r\n//                   },\r\n//                 ]}\r\n//               >\r\n//                 <Input placeholder='Email' onChange={(e) => setEmail(e.target.value)} />\r\n//               </Form.Item>\r\n//               <Form.Item\r\n//                 name=\"password\"\r\n//                 label=\"Password\"\r\n//                 rules={[\r\n//                   {\r\n//                     required: true,\r\n//                     message: 'Please input your password!',\r\n//                   },\r\n//                 ]}\r\n//                 hasFeedback\r\n//               >\r\n//                 <Input.Password placeholder='Password' />\r\n//               </Form.Item>\r\n//               <Form.Item\r\n\r\n//                 name=\"confirm\"\r\n//                 label=\"Confirm Password\"\r\n//                 dependencies={['password']}\r\n//                 hasFeedback\r\n//                 rules={[\r\n//                   {\r\n//                     required: true,\r\n//                     message: 'Please confirm your password!',\r\n//                   },\r\n//                   ({ getFieldValue }) => ({\r\n//                     validator(_, value) {\r\n//                       if (!value || getFieldValue('password') === value) {\r\n//                         return Promise.resolve();\r\n//                       }\r\n//                       return Promise.reject(new Error('The new password that you entered do not match!'));\r\n//                     },\r\n//                   }),\r\n//                 ]}\r\n//               >\r\n//                 <Input.Password placeholder='Confirm Password' onChange={(e) => setPassword(e.target.value)} />\r\n//               </Form.Item>\r\n\r\n             \r\n                \r\n//                  <Form.Item>\r\n//                 <input type=\"file\" id='file' style={{ display: 'none' }} onChange={handleAvatarChange} />\r\n//                 <label htmlFor=\"file\" className='label-avt' style={{ cursor: 'pointer' }}>\r\n//                   <img src={Upload} alt=\"Add your avatar\" width={35} style={{ marginLeft: '50px' }} />\r\n//                   <span className='span-avt'>{avatar ? avatar.name : 'Add an avatar'}</span>\r\n//                 </label>\r\n//               </Form.Item>\r\n                  \r\n                \r\n\r\n                \r\n                \r\n              \r\n              \r\n//               <Row justify=\"end\" style={{ marginBottom: '16px' }}>\r\n//                 <Col>\r\n//                   <Form.Item noStyle>\r\n//                     Already have an Account <Link to=\"/login\">Login</Link>?\r\n//                   </Form.Item>\r\n//                 </Col>\r\n//               </Row>\r\n              \r\n//               <Row>\r\n//                 <Col offset={8}>\r\n//                   <Form.Item {...tailFormItemLayout} >\r\n//                     <Button type=\"primary\" htmlType=\"submit\" onClick={submit}>\r\n//                       Register\r\n//                     </Button>\r\n//                   </Form.Item>\r\n//                 </Col>\r\n//                 <Col>\r\n//                 </Col>\r\n//               </Row>\r\n//             </Form>\r\n//           </Row>\r\n//         </Col>\r\n//       </Row>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { Button, Col, Form, Input, Row, Typography, Image } from 'antd';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Upload from '../assets/img/upload.png'; // Assuming path is correct\r\n\r\nconst { Title } = Typography;\r\n\r\n const tailFormItemLayout = {\r\n    wrapperCol: {\r\n      xs: { span: 24, offset: 0 },\r\n      sm: { span: 16, offset: 8 },\r\n    },\r\n  };\r\n\r\nconst RegisterPage = () => {\r\n  const [form] = Form.useForm();\r\n  const navigate = useNavigate();\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [avatar, setAvatar] = useState(null);\r\n\r\n  // Function to handle file input for avatar\r\n  const handleAvatarChange = (e) => {\r\n    if (e.target.files.length > 0) {\r\n      setAvatar(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log('Received values of form:', values);\r\n    // Here you would typically handle registration logic, e.g., sending data to a server\r\n    // After successful registration, you might want to redirect the user:\r\n    // navigate('/some-path');\r\n  };\r\n\r\n  return (\r\n    <div className='formClass'>\r\n      <Row justify='center' style={{ maxWidth: '600px', margin: '0 auto' }}>\r\n        <Col span={24}>\r\n          <Title level={2}>Sign Up</Title>\r\n          <Form\r\n            form={form}\r\n            name=\"register\"\r\n            onFinish={onFinish}\r\n            labelCol={{ span: 8 }}\r\n            wrapperCol={{ span: 16 }}\r\n            initialValues={{ remember: true }}\r\n            autoComplete=\"off\"\r\n            style={{ width: '100%' }}\r\n          >\r\n            <Form.Item\r\n              name=\"userName\"\r\n              label=\"User Name\"\r\n              rules={[{ required: true, message: 'Please input your user name!' }]}\r\n            >\r\n              <Input placeholder='User Name' onChange={(e) => setName(e.target.value)} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"email\"\r\n              label=\"E-mail\"\r\n              rules={[\r\n                { type: 'email', message: 'The input is not valid E-mail!' },\r\n                { required: true, message: 'Please input your E-mail!' }\r\n              ]}\r\n            >\r\n              <Input placeholder='Email' onChange={(e) => setEmail(e.target.value)} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              rules={[{ required: true, message: 'Please input your password!' }]}\r\n            >\r\n              <Input.Password placeholder='Password' onChange={(e) => setPassword(e.target.value)} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"confirm\"\r\n              label=\"Confirm Password\"\r\n              dependencies={['password']}\r\n              rules={[\r\n                { required: true, message: 'Please confirm your password!' },\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    if (!value || getFieldValue('password') === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(new Error('The passwords do not match!'));\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password placeholder='Confirm Password' />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <input type=\"file\" id='file' style={{ display: 'none' }} onChange={handleAvatarChange} />\r\n              <label htmlFor=\"file\" style={{ cursor: 'pointer' }}>\r\n                <img src={Upload} alt=\"Upload avatar\" style={{ verticalAlign: 'middle', marginRight: '10px' }} />\r\n                {avatar ? avatar.name : 'Add an avatar'}\r\n              </label>\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Register\r\n              </Button>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              Already have an Account? <Link to=\"/login\">Login</Link>\r\n            </Form.Item>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,UAAU,EAAEC,KAAK,QAAQ,MAAM;AACvE,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAOC,MAAM,MAAM,0BAA0B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAM;EAAEC;AAAM,CAAC,GAAGP,UAAU;AAE3B,MAAMQ,kBAAkB,GAAG;EACxBC,UAAU,EAAE;IACVC,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAE,CAAC;IAC3BC,EAAE,EAAE;MAAEF,IAAI,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAE;EAC5B;AACF,CAAC;AAEH,MAAME,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,CAAC,GAAGnB,IAAI,CAACoB,OAAO,CAAC,CAAC;EAC7B,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAAC2B,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC6B,QAAQ,EAAEC,WAAW,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC+B,MAAM,EAAEC,SAAS,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;;EAE1C;EACA,MAAMiC,kBAAkB,GAAIC,CAAC,IAAK;IAChC,IAAIA,CAAC,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MAC7BL,SAAS,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9B;EACF,CAAC;EAED,MAAME,QAAQ,GAAIC,MAAM,IAAK;IAC3BC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,MAAM,CAAC;IAC/C;IACA;IACA;EACF,CAAC;EAED,oBACE3B,OAAA;IAAK8B,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxB/B,OAAA,CAACP,GAAG;MAACuC,OAAO,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,QAAQ,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAS,CAAE;MAAAJ,QAAA,eACnE/B,OAAA,CAACV,GAAG;QAACe,IAAI,EAAE,EAAG;QAAA0B,QAAA,gBACZ/B,OAAA,CAACC,KAAK;UAACmC,KAAK,EAAE,CAAE;UAAAL,QAAA,EAAC;QAAO;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChCxC,OAAA,CAACT,IAAI;UACHmB,IAAI,EAAEA,IAAK;UACXG,IAAI,EAAC,UAAU;UACfa,QAAQ,EAAEA,QAAS;UACnBe,QAAQ,EAAE;YAAEpC,IAAI,EAAE;UAAE,CAAE;UACtBF,UAAU,EAAE;YAAEE,IAAI,EAAE;UAAG,CAAE;UACzBqC,aAAa,EAAE;YAAEC,QAAQ,EAAE;UAAK,CAAE;UAClCC,YAAY,EAAC,KAAK;UAClBX,KAAK,EAAE;YAAEY,KAAK,EAAE;UAAO,CAAE;UAAAd,QAAA,gBAEzB/B,OAAA,CAACT,IAAI,CAACuD,IAAI;YACRjC,IAAI,EAAC,UAAU;YACfkC,KAAK,EAAC,WAAW;YACjBC,KAAK,EAAE,CAAC;cAAEC,QAAQ,EAAE,IAAI;cAAEC,OAAO,EAAE;YAA+B,CAAC,CAAE;YAAAnB,QAAA,eAErE/B,OAAA,CAACR,KAAK;cAAC2D,WAAW,EAAC,WAAW;cAACC,QAAQ,EAAG9B,CAAC,IAAKR,OAAO,CAACQ,CAAC,CAACC,MAAM,CAAC8B,KAAK;YAAE;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClE,CAAC,eAEZxC,OAAA,CAACT,IAAI,CAACuD,IAAI;YACRjC,IAAI,EAAC,OAAO;YACZkC,KAAK,EAAC,QAAQ;YACdC,KAAK,EAAE,CACL;cAAEM,IAAI,EAAE,OAAO;cAAEJ,OAAO,EAAE;YAAiC,CAAC,EAC5D;cAAED,QAAQ,EAAE,IAAI;cAAEC,OAAO,EAAE;YAA4B,CAAC,CACxD;YAAAnB,QAAA,eAEF/B,OAAA,CAACR,KAAK;cAAC2D,WAAW,EAAC,OAAO;cAACC,QAAQ,EAAG9B,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACC,MAAM,CAAC8B,KAAK;YAAE;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/D,CAAC,eAEZxC,OAAA,CAACT,IAAI,CAACuD,IAAI;YACRjC,IAAI,EAAC,UAAU;YACfkC,KAAK,EAAC,UAAU;YAChBC,KAAK,EAAE,CAAC;cAAEC,QAAQ,EAAE,IAAI;cAAEC,OAAO,EAAE;YAA8B,CAAC,CAAE;YAAAnB,QAAA,eAEpE/B,OAAA,CAACR,KAAK,CAAC+D,QAAQ;cAACJ,WAAW,EAAC,UAAU;cAACC,QAAQ,EAAG9B,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACC,MAAM,CAAC8B,KAAK;YAAE;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9E,CAAC,eAEZxC,OAAA,CAACT,IAAI,CAACuD,IAAI;YACRjC,IAAI,EAAC,SAAS;YACdkC,KAAK,EAAC,kBAAkB;YACxBS,YAAY,EAAE,CAAC,UAAU,CAAE;YAC3BR,KAAK,EAAE,CACL;cAAEC,QAAQ,EAAE,IAAI;cAAEC,OAAO,EAAE;YAAgC,CAAC,EAC5D,CAAC;cAAEO;YAAc,CAAC,MAAM;cACtBC,SAASA,CAACC,CAAC,EAAEN,KAAK,EAAE;gBAClB,IAAI,CAACA,KAAK,IAAII,aAAa,CAAC,UAAU,CAAC,KAAKJ,KAAK,EAAE;kBACjD,OAAOO,OAAO,CAACC,OAAO,CAAC,CAAC;gBAC1B;gBACA,OAAOD,OAAO,CAACE,MAAM,CAAC,IAAIC,KAAK,CAAC,6BAA6B,CAAC,CAAC;cACjE;YACF,CAAC,CAAC,CACF;YAAAhC,QAAA,eAEF/B,OAAA,CAACR,KAAK,CAAC+D,QAAQ;cAACJ,WAAW,EAAC;YAAkB;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC,eAEZxC,OAAA,CAACT,IAAI,CAACuD,IAAI;YAAAf,QAAA,gBACR/B,OAAA;cAAOsD,IAAI,EAAC,MAAM;cAACU,EAAE,EAAC,MAAM;cAAC/B,KAAK,EAAE;gBAAEgC,OAAO,EAAE;cAAO,CAAE;cAACb,QAAQ,EAAE/B;YAAmB;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACzFxC,OAAA;cAAOkE,OAAO,EAAC,MAAM;cAACjC,KAAK,EAAE;gBAAEkC,MAAM,EAAE;cAAU,CAAE;cAAApC,QAAA,gBACjD/B,OAAA;gBAAKoE,GAAG,EAAEtE,MAAO;gBAACuE,GAAG,EAAC,eAAe;gBAACpC,KAAK,EAAE;kBAAEqC,aAAa,EAAE,QAAQ;kBAAEC,WAAW,EAAE;gBAAO;cAAE;gBAAAlC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,EAChGrB,MAAM,GAAGA,MAAM,CAACN,IAAI,GAAG,eAAe;YAAA;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAEZxC,OAAA,CAACT,IAAI,CAACuD,IAAI;YAAA,GAAK5C,kBAAkB;YAAA6B,QAAA,eAC/B/B,OAAA,CAACX,MAAM;cAACiE,IAAI,EAAC,SAAS;cAACkB,QAAQ,EAAC,QAAQ;cAAAzC,QAAA,EAAC;YAEzC;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eAEZxC,OAAA,CAACT,IAAI,CAACuD,IAAI;YAAAf,QAAA,GAAC,2BACgB,eAAA/B,OAAA,CAACJ,IAAI;cAAC6E,EAAE,EAAC,QAAQ;cAAA1C,QAAA,EAAC;YAAK;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA1GID,YAAY;EAAA,QACDjB,IAAI,CAACoB,OAAO,EACVd,WAAW;AAAA;AAAA6E,EAAA,GAFxBlE,YAAY;AA4GlB,eAAeA,YAAY;AAAC,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}